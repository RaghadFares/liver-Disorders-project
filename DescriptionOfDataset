


##Aisha workspace

General information about the dataset


-The source of the dataSet: https://www.kaggle.com/datasets/fatemehmehrparvar/liver-disorders


-The goal of collecting this dataset
The aim of creating this dataset is to study the differences between US patients and Indian patients with liver disease.
Therefore, there are differences based on gender in predicting liver disease,
as previous studies found the number of people infected with this disease,
its prevalence rate, and many statistical details.


- Number of attributes: 11


- Attribute types:
          Data Types
Age            int64
Gender        object
TB           float64
DB           float64
Alkphos        int64
Sgpt           int64
Sgot           int64
TP           float64
ALB          float64
A/G Ratio    float64
Selector       int64


- Number of objects: 583


- label: Selector



_____
## Attribute's Description table
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|   Attribute Name   |                       Description                           |   Data Type   |                  Possible values                          |
+====================+=============================================================+===============+===========================================================+
| Age                |   Represents the age of the patients.                       | Numeric       |  4 to 90                                                  |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
| Gender             |   Represents the gender of the patients.                    | Categotical   |  "Male" or "Female"                                       |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|                    |   refers to Total Bilirubin.                                |               |                                                           |
| TB                 |   Bilirubin is a yellowish substance found in bile,         | Numeric       |  continuous numrical values(different possible)           |
|                    |   Total Bilirubin (TB) refers to the total amount of        |               |                                                           |
|                    |   bilirubin in the blood.                                   |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|                    |   refers to Direct Bilirubin.                               |               |                                                           |
| DB                 |   Direct Bilirubin (DB) refers specifically to the          | Numeric       |  continuous numrical values(different possible)           |
|                    |   conjugated bilirubin, which is the form of bilirubin that |               |                                                           |
|                    |   is directly excreted by the liver into bile.              |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
| Alkphos            |   refers to Alkaline Phosphatase. Alkaline phosphatase is   | Numeric       |  continuous numrical values(different possible)           |
|                    |   an enzyme found primarily in the liver and bones.         |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|                    |   refers to Serum Glutamic Pyruvic Transaminase, also known |               |                                                           |
| Sgpt               |   as Alanine Aminotransferase (ALT). SGPT is an enzyme      | Numeric       |  continuous numrical values(different possible)           |
|                    |   found primarily in the liver.                             |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|                    |   refers to Serum Glutamic Oxaloacetic Transaminase, also   |               |                                                           |
| Sgot               |   known as Aspartate Aminotransferase (AST). SGOT is an     | Numeric       |  continuous numrical values(different possible)           |
|                    |   enzyme found primarily in the liver, heart, and muscles.  |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
| TP                 |   refers to Total Proteins.                                 | Numeric       |  continuous numrical values(different possible)           |
|                    |   It represents the total protein levels in the blood.      |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
| ALB                |   represents Albumin levels in the blood.                   | Numeric       |  continuous numrical values(different possible)           |
|                    |   Albumin is a protein produced by the liver.               |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
|                    |  refers to the Albumin/Globulin ratio.                      |               |                                                           |
|                    |  It is a calculated value obtained by dividing the albumin  |               |                                                           |
| A/G Ratio          |  levels by the globulin levels in the blood.                | Numeric       |  continuous numrical values(different possible)           |
|                    |  This ratio provides information about the balance between  |               |                                                           |
|                    |  albumin and globulin proteins in the blood.                |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+
| Selector           |   is a class label indicating whether a patient has liver   | Binary        |  continuous numrical values(different possible)           |
|                    |   disease or not.                                           |               |                                                           |
+--------------------+-------------------------------------------------------------+---------------+-----------------------------------------------------------+

### phase(2)

## sample of 20 employees from the dataset:
using sample() function

'''{python}
sample=df.sample(n=20);
print(sample);
'''
______
## Show the missing value:
We have 4 missing values in a column "A/G Ratio"

'''{python}
# Count missing values in each column
missing_counts = missing_values.sum();

# Extract rows with missing values
rows_with_missing = df[df.isna().any(axis=1)];

# Print the results
print("Missing counts in each column:");
print(missing_counts);
print("Rows with missing values:");
print(rows_with_missing);
'''
______
## Show the Min., 1st Qu., Median, Mean ,3rd Qu.,Max. for each numeric column:
using summary_stats() function

'''{python}
summary_stats=df.describe();
print(summary_stats);
'''
______
##Show the Variance
Variance helps understand the extent of dispersion or scatter of values in each column. As the variance increases, it indicates that the values are more spread out
and scattered away from the mean, whereas decreasing variance suggests that the values are less scattered and closer to the mean value.
Therefore, our Variance results indicate:
 #Age:
   Due to the high variance, the level of dispersion and spread of values is high.

#TB, DB, Alkphos, Sgpt, Sgot (Liver Enzymes):
   With high variance in these columns, the level of dispersion and spread of values is very high.

#TP, ALB, A/G Ratio, Selector:
   With moderate to low variance in these columns, the level of dispersion and spread of values is moderate to low.
______
## Understanding the data through graph representations:
'''{python}
import matplotlib.pyplot as plt
df = pd.read_csv('Dis.csv');
gender_diagnosis_counts = df[df['Selector'] == 1]['Gender'].value_counts();
plt.figure(figsize=(8, 8));
plt.pie(gender_diagnosis_counts, labels=gender_diagnosis_counts.index, autopct='%1.1f%%', startangle=140, colors=['lightblue','pink']);
plt.title('The relationship between gender and liver disease');
plt.axis('equal');
plt.show();
'''
People affected by liver disease were selected from the 'Selector' attribute for both genders of the 'Gander' attribute for comparison between the ratio of affected women and men. 
As a result, it was concluded that men are much more susceptible to liver disease than women by a significant margin.
__
'''{python}
import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))
plt.scatter(df[df['Selector'] == 1]['TB'], df[df['Selector'] == 1]['Selector'], color='red', label='Liver Disease')
plt.scatter(df[df['Selector'] == 2]['TB'], df[df['Selector'] == 2]['Selector'], color='blue', label='No Liver Disease')
plt.xlabel('Total Bilirubin (TB)')
plt.ylabel('Liver Disease (1=Diseased, 2=Non-Diseased)')
plt.title('Relationship between Total Bilirubin (TB) and Liver Disease Diagnosis')
plt.legend()
plt.grid(True)
plt.ylim(0.9, 2.1)
plt.show()
'''
The chart(Scatter) above indicates a relationship between liver disease diagnosis and elevated levels of Total Bilirubin in the blood, as patients with liver disease
have higher levels of Total Bilirubin in the blood compared to non-diseased individuals.
__
'''{python}
plt.figure(figsize=(10, 6))
plt.scatter(df[df['Selector'] == 1]['DB'], df[df['Selector'] == 1]['Selector'], color='red', label='Liver Disease')
plt.scatter(df[df['Selector'] == 2]['DB'], df[df['Selector'] == 2]['Selector'], color='blue', label='No Liver Disease')
plt.xlabel('Direct Billirubin(DB)')
plt.ylabel('Liver Disease (1=Diseased, 2=Non-Diseased)')
plt.title('Relationship between Direct Billirubin (DB) and Liver Disease Diagnosis')
plt.legend()
plt.grid(True)
plt.ylim(0.9, 2.1)
plt.show()
'''
the chart(Scatter) shows a relationship between DB(Direct Bilirubin) and liver disease diagnosis, as patients with liver disease have higher levels 
of DB ‏(Direct Bilirubin) compared to those without liver disease.
__
'''{python}
import matplotlib.pyplot as plt
import pandas as pd
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['Alkphos'], df[df['Selector'] == 2]['Alkphos']], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('Alkphos')
plt.title('Relationship between Alkphos and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
The chart(Boxplot) illustrates a direct relationship between Alkphos and liver disease, as patients with liver disease have higher levels of Alkphos 
compared to non-diseased individuals.
__
'''{python}
import matplotlib.pyplot as plt
import pandas as pd
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['Alkphos'], df[df['Selector'] == 2]['Alkphos']], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('Alkphos')
plt.title('Relationship between Alkphos and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
The chart(Boxplot) illustrates a direct relationship between Alkphos and liver disease, as patients with liver disease have higher levels of Alkphos 
compared to non-diseased individuals.
__
'''{python}
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['Sgpt'], df[df['Selector'] == 2]['Sgpt']], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('Sgpt')
plt.title('Relationship between Sgpt and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
The chart(Boxplot) clearly shows a relationship between liver disease and SGPT(Serum Glutamate Pyruvate Transaminase) as patients with liver disease 
have higher levels of this enzyme compared to non-affected individuals.
__
'''{python}
import matplotlib.pyplot as plt
import pandas as pd
plt.figure(figsize=(10, 6))
mean_sgot_by_selector = df.groupby('Selector')['Sgot'].mean()
plt.plot(mean_sgot_by_selector.index, mean_sgot_by_selector.values, marker='o', linestyle='-')
plt.xlabel('Liver Disease Diagnosis (1=Diseased, 2=Non-Diseased)')
plt.ylabel('Mean SGOT Level')
plt.title('Relationship between SGOT and Liver Disease Diagnosis')
plt.grid(True)
plt.xticks([1, 2], ['Diseased', 'Non-Diseased'])
plt.show()
'''
The chart(line Graph) clearly shows a relationship between SGOT(Serum Glutamate Oxaloacetic Transaminase) and liver disease, as patients with liver disease have higher levels of SGOT compared 
to non-affected individuals.
__
'''{python}
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['TP'], df[df['Selector'] == 2]['TP']], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('Total Proteins')
plt.title('Relationship between Total Proteins and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
The chart(Boxplot) reveals a relationship between TP(Total Proteins) and liver disease, despite the weak correlation. Non-affected individuals also have TP levels, 
but those affected have slightly higher levels.
__
'''{python}
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['ALB'], df[df['Selector'] == 2]['ALB']], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('Albumin')
plt.title('Relationship between Albumin and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
From the chart(BoxPlot), it is evident that there is a negative correlation between ALB(Albumin) and non-affected individuals with liver disease, 
as an increase in ALB indicates liver health. Individuals with liver disease have lower levels of ALB.
__
'''{python}
plt.figure(figsize=(10, 6))
plt.boxplot([df[df['Selector'] == 1]['A/G Ratio'].dropna(), df[df['Selector'] == 2]['A/G Ratio'].dropna()], labels=['Liver Disease', 'No Liver Disease'])
plt.xlabel('Liver Disease Diagnosis')
plt.ylabel('A/G Ratio')
plt.title('Relationship between A/G Ratio and Liver Disease Diagnosis')
plt.grid(True)
plt.show()
'''
The chart(BoxPlot) reveals variation in the A/G ratio among individuals with liver disease compared to those without. 
However, there is some correlation between an elevated A/G ratio and the presence of liver disease.

________________________
#Data Preprocessing:
# Data cleaning

# hundling missing values\
'''{python}

import pandas as pd
mean_value = df['A/G Ratio'].mean()
df['A/G Ratio'].fillna(value=mean_value, inplace=True)


# Because all the 4 missing values in our data are in just one column which is the A/G Ratio, so we calculated the mean for this column and then replaced the missing values with this mean
-----------------------------------------------------

 Display how many duplicate rows I have\
'''{python}

import pandas as pd
df = pd.read_csv('Indian Liver Patient Dataset (ILPD).csv')
num_duplicate_rows = df.duplicated().sum()
print("The number of duplicate rows in the dataset:", num_duplicate_rows)

# Number of duplicate rows in the dataset: 13

__

Display the duplicates data set and in which line it is repeated\
'''{python}

import pandas as pd
df = pd.read_csv('Indian Liver Patient Dataset (ILPD).csv')
duplicate_rows = df[df.duplicated()]
if duplicate_rows.empty:
    print("No duplicate rows found.")
else:
    print("Duplicate rows found:")
    print(duplicate_rows)
    print("\nLines where duplicates are repeated:")
    for index, row in duplicate_rows.iterrows():
        print("Line", index + 1, "is repeated.")


# Duplicate rows found:
     Age  Gender   TB   DB  Alkphos  Sgpt  Sgot   TP  ALB  A/G Ratio  Selector
19    40  Female  0.9  0.3      293   232   245  6.8  3.1       0.80         1
26    34    Male  4.1  2.0      289   875   731  5.0  2.7       1.10         1
34    38  Female  2.6  1.2      410    59    57  5.6  3.0       0.80         2
55    42    Male  8.9  4.5      272    31    61  5.8  2.0       0.50         1
62    58    Male  1.0  0.5      158    37    43  7.2  3.6       1.00         1
106   36    Male  5.3  2.3      145    32    92  5.1  2.6       1.00         2
108   36    Male  0.8  0.2      158    29    39  6.0  2.2       0.50         2
138   18    Male  0.8  0.2      282    72   140  5.5  2.5       0.80         1
143   30    Male  1.6  0.4      332    84   139  5.6  2.7       0.90         1
158   72    Male  0.7  0.1      196    20    35  5.8  2.0       0.50         1
164   39    Male  1.9  0.9      180    42    62  7.4  4.3       1.38         1
174   31    Male  0.6  0.1      175    48    34  6.0  3.7       1.60         1
201   49    Male  0.6  0.1      218    50    53  5.0  2.4       0.90         1

# Lines where duplicates are repeated:
Line 20 is repeated.
Line 27 is repeated.
Line 35 is repeated.
Line 56 is repeated.
Line 63 is repeated.
Line 107 is repeated.
Line 109 is repeated.
Line 139 is repeated.
Line 144 is repeated.
Line 159 is repeated.
Line 165 is repeated.
Line 175 is repeated.
Line 202 is repeated.

__

hundling duplicates lines\
'''{python}

import pandas as pd
df = pd.read_csv('Indian Liver Patient Dataset (ILPD).csv')
df.drop_duplicates(inplace=True)
print("DataFrame after dropping duplicate rows:")
print(df)

# DataFrame after dropping duplicate rows:
     Age  Gender    TB   DB  Alkphos  Sgpt  Sgot   TP  ALB  A/G Ratio  \
0     65  Female   0.7  0.1      187    16    18  6.8  3.3       0.90   
1     62    Male  10.9  5.5      699    64   100  7.5  3.2       0.74   
2     62    Male   7.3  4.1      490    60    68  7.0  3.3       0.89   
3     58    Male   1.0  0.4      182    14    20  6.8  3.4       1.00   
4     72    Male   3.9  2.0      195    27    59  7.3  2.4       0.40   
..   ...     ...   ...  ...      ...   ...   ...  ...  ...        ...   
578   60    Male   0.5  0.1      500    20    34  5.9  1.6       0.37   
579   40    Male   0.6  0.1       98    35    31  6.0  3.2       1.10   
580   52    Male   0.8  0.2      245    48    49  6.4  3.2       1.00   
581   31    Male   1.3  0.5      184    29    32  6.8  3.4       1.00   
582   38    Male   1.0  0.3      216    21    24  7.3  4.4       1.50   

     Selector  
0           1  
1           1  
2           1  
3           1  
4           1  
..        ...  
578         2  
579         1  
580         1  
581         1  
582         2  

[570 rows x 11 columns]
